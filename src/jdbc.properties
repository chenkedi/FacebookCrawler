jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc\:mysql\://172.20.201.132\:3306/FacebookCrawler?useUnicode\=true&amp;characterEncoding\=UTF-8

jdbc.username=soft
jdbc.password=1234qwer

#<!-- 初始化连接 -->
dataSource.initialSize=10

#<!-- 最大空闲连接 -->
dataSource.maxIdle=20

#<!-- 最小空闲连接 -->
dataSource.minIdle=5

#最大连接数量
dataSource.maxActive=50


#SQL查询,用来验证从连接池取出的连接
dbcp.validationQuery=SELECT 1
#指明连接是否被空闲连接回收器(如果有)进行检验，如果检测失败，则连接将被从池中去除
dbcp.testWhileIdle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位，一般比minEvictableIdleTimeMillis小
dbcp.timeBetweenEvictionRunsMillis=300000
#在每次空闲连接回收器线程(如果有)运行时检查的连接数量，最好和maxActive一致
dbcp.numTestsPerEvictionRun=50
#连接池中连接，在时间段内一直空闲，被逐出连接池的时间(1000*60*60)，以毫秒为单位
dbcp.minEvictableIdleTimeMillis=3600000

#是否在自动回收超时连接的时候打印连接的超时错误
dataSource.logAbandoned=true

#是否自动回收超时连接
dataSource.removeAbandoned=true

#超时时间(以秒数为单位)
#设置超时时间有一个要注意的地方，超时时间=现在的时间-程序中创建Connection的时间，如果 maxActive比较大，比如超过100，那么removeAbandonedTimeout可以设置长一点比如180，也就是三分钟无响应的连接进行回收，当然应用的不同设置长度也不同。
dataSource.removeAbandonedTimeout=180




#<!-- 超时等待时间以毫秒为单位 -->
#maxWait代表当Connection用尽了，多久之后进行回收丢失连接
dataSource.maxWait=1000
jdbc.url.local=jdbc\:mysql\://127.0.0.1\:3306/price_data?useUnicode\=true&amp;characterEncoding\=UTF-8
jdbc.username.local=root
jdbc.password.local=3329508
