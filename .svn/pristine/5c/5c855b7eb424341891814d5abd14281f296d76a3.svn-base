package api.facebook.main;


import java.util.List;

import javax.annotation.Resource;

import org.json.JSONObject;
import org.springframework.stereotype.Controller;

import api.facebook.bean.Seeds;
import api.facebook.dao.SeedsDao;
import api.facebook.method.GetSeeds;
import api.facebook.util.AppContext;

/**
 * 爬取种子节点的公众人物的个人信息
 * @author chenkedi
 *
 */
@Controller
public class SeedsInfoCrawler
{
	@Resource
	private SeedsDao seedsDao;
	
	public static void main(String[] args){
		System.out.println("正在创建数据库连接和缓冲池...");
	    AppContext.initAppCtx();
	    System.out.println("数据库连接已连接！缓冲池已建立");
	    
	    SeedsInfoCrawler crawler= (SeedsInfoCrawler) AppContext.appCtx.getBean(SeedsInfoCrawler.class);
	    crawler.run();
	}
	public void run(){
		while(true){
	    	List<Seeds> seeds=seedsDao.readSeeds(3);//获得需要爬取的种子队列
	    	
	    	if(seeds.size()!=0){
	    		for(Seeds temp : seeds){
	    			//初始化API的getSeeds方法
	    			GetSeeds getSeed=new GetSeeds();
	    			//调用api得到seeds的json数据
	    			JSONObject jsonObject=getSeed.callAPI(temp.getUserName(),"");
	    			//数据抽取，将json转换为bean兼容的格式
	    			Seeds seed=getSeed.dataExtract(jsonObject);//如果出现请求错误，seed可能为空，需要做处理
	    			if(seed!=null){
	    				seedsDao.addSeedsInfo(seed,temp.getSeedsId());
	    				System.out.println(temp.getName()+"的信息插入成功！\n\n");
	    			}else{
	    				System.out.println(temp.getName()+"的信息获取失败，继续采集下一个种子！\n\n");
	    			}
	    		}
	    	}else{
	    		
	    		System.out.println("所有种子的个人信息采集完成，睡眠24小时");
	    		try {
					Thread.sleep(24*60*3600*1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
	    	}
	    	
	    }
	}
}
