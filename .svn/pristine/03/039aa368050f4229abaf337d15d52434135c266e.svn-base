package api.facebook.daoImpl;

import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import api.facebook.bean.Posts;
import api.facebook.dao.PostsDao;

@Repository
public class PostDaoImpl implements PostsDao
{
	private JdbcTemplate jdbcTemplate;
	private static final Logger log=Logger.getLogger(PostDaoImpl.class);
	
	@Autowired
	public void setDataSource(DataSource dataSource) {
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }

	@Override
	public void addPosts(Posts post) {
		final String SQL_INSERT_POST=
				"INSERT INTO posts(message_id,message,created_time,seeds_id,link,picture,shares) VALUES (?,?,?,?,?,?,?)";
		jdbcTemplate.update(
				SQL_INSERT_POST,
				post.getMessageId(),
				post.getMessage(),
				post.getCreatedTime(),
				post.getSeedsId(),
				post.getLink(),
				post.getPicture(),
				post.getShares()
				);
	}
	
	@Override
	public int[] batchInsert(final List<Posts> posts) {
		final String SQL_INSERT_POST=
				"INSERT INTO posts(message_id,message,created_time,seeds_id,link,picture,shares) VALUES (?,?,?,?,?,?,?)";
		List<Object[]> batch = new ArrayList<Object[]>();
		for (Posts post : posts) {
            Object[] values = new Object[] {
            		post.getMessageId(),
    				post.getMessage(),
    				post.getCreatedTime(),
    				post.getSeedsId(),
    				post.getLink(),
    				post.getPicture(),
    				post.getShares()};
            batch.add(values);
        }
		
		try{
		int[] updateCounts = jdbcTemplate.batchUpdate(
				SQL_INSERT_POST,
                batch);
        return updateCounts;
		}catch(Exception e){
			log.error("数据库批量插入"+posts.get(0).getSeedsId()+"的数据出错，错误信息："+e.getMessage());
			return new int[] {1};
		}
		
	}
	
}
